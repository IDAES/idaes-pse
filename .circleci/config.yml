version: 2.1

# Notes:
# - use "source activate" instead of "conda activate" since conda init bash
#   does not seem to "take".

_vars:
  - &ubuntu-image idaes/ubuntu18-conda:2.1

## Commands shared by jobs

commands:
  setup_env:
    description: Set up shared environment variables
    steps:
      - run:
          name: "Set locale to 'C.UTF-8'"
          command: |
            echo "export LANG=C.UTF-8" >> $BASH_ENV
            echo "export LC_ALL=C.UTF-8" >> $BASH_ENV
  create_conda:
    description: Create Python conda environment
    parameters:
      python_version:
        type: string
    steps:
      - run: conda create -yv -n idaes python=<<parameters.python_version>>
  install:
    description: Install idaes and extensions
    parameters:
      target:
        type: string
    steps:
      - run:
          name: Install from source tree
          command: |
              source activate idaes
              pip --no-cache-dir install --progress-bar off git+https://github.com/PyUtilib/pyutilib git+https://github.com/IDAES/pyomo.git@IDAES
              pip --no-cache-dir install --progress-bar off -e <<parameters.target>>
              idaes get-extensions
  pytest:
    description: Run tests with pytest
    parameters:
      tags:
        type: string
        default: "not integration"
    steps:
      - run:
          name: Run pytest
          command: |
              source activate idaes
              pytest -c pytest.ini idaes -m "<<parameters.tags>>"
  pytest_cov:
    description: Run tests with pytest
    parameters:
      tags:
        type: string
        default: "not integration"
    steps:
      - run:
          name: Run pytest
          command: |
              source activate idaes
              pytest -c pytest.ini idaes --cov -m "<<parameters.tags>>"
  build_docs:
    description: Build Sphinx documentation
    steps:
      - run:
          name: Build Sphinx docs
          command: |
              source activate idaes
              cd docs
              python build.py
  integration:
    description: Run integration tests, including examples
    steps:
      - run:
          name: Clone examples-dev
          command: git clone "https://idaes-build:${IDAESBUILDPASS}@github.com/IDAES/examples-dev.git"
      - run:
          name: Run integration tests if PR has approved tag
          command: |
            PR=$(echo $CIRCLE_PULL_REQUEST | cut -f7 -d'/')
            TOK=${IDAESBUILDTOKEN}
            printf "Looking for PR #${PR}..\n"
            curl -s -H "Authorization: token $TOK" "https://api.github.com/repos/IDAES/idaes-dev/issues/$PR" > pr
            grep '"url":\s*"https://api.github.com/repos/IDAES/idaes-dev/labels/approved"' pr && found=yes || found=no
            if [ $found = yes ]; \
            then \
              printf "\n> PR #${PR} is marked as approved. Running integration tests...\n\n"; \
              source activate idaes; \
              pytest -m integration idaes; \
              cd examples-dev; \
              pytest;  \
            else \
              printf "\n> Not running integration tests as PR #${PR} is not marked as approved\n\n"; \
              printf ">\n"; \
              printf ">   If you want to run them, add the 'approved' label to your pull request\n\n";
              exit 1; \
            fi
          # The default timeout is only 10 minutes
          no_output_timeout: 60m
  clear_approved_tag:
    description: Remove approved label, if present, from PR
    steps:
      - run:
          name: Remove approved label
          command: |
            PR=$(echo $CIRCLE_PULL_REQUEST | cut -f7 -d'/')
            TOK=${IDAESBUILDTOKEN}
            curl -s -H "Authorization: token $TOK" "https://api.github.com/repos/IDAES/idaes-dev/issues/$PR" > pr
            awk -F'"' '\
              BEGIN {s=0; print "{"} /"labels":/ { s=1 } \
              /"name":/ {if (s > 0 && $4 != "approved") {labels[s]=$4; s++}} \
              /\]/ {if (s > 0) {n=s - 1 ; s=0}} \
              END {\
                print "\"labels\" : ["; i=1; while (i < n) {print "\"" labels[i] "\","; i++} \
                if (n > 0) print "\"" labels[n] "\" ] }" \
              }' pr > prl;\
            cat prl; \
            curl -s -X PATCH -H "Authorization: token $TOK" \
              "https://api.github.com/repos/IDAES/idaes-dev/issues/$PR" --data @prl ; \
  pylint:
    description: Run pylint
    steps:
      - run:
          name: pylint
          command: |
            source activate idaes
            python -m pip --no-cache-dir install --progress-bar off pylint
            pylint -E --ignore-patterns="test_.*" idaes || true
  coverage:
    description: Report code coverage
    steps:
      - run:
          name: coverage
          command: |
              source activate idaes
              coverage xml
              coveralls
  idaes_pse:
    description: Install and test idaes-pse
    steps:
      - run:
          name: Install idaes-pse
          command: |
            source activate idaes
            python -m pip install --progress-bar=off idaes-pse
      - run:
          name: Install idaes extensions
          command: |
            source activate idaes
            idaes get-extensions --platform ubuntu1804 --verbose
            ipopt -v
      - run:
          name: Run tests
          command: |
            source activate idaes
            pytest --pyargs idaes -W ignore

## Jobs

jobs:
  idaes_dev:
    docker:
      - image: *ubuntu-image
    working_directory: ~/repo
    parameters:
      python:
        type: string
        default: "3.7"
      pip_target:
        type: string
        default: "."
      devmode:
        type: boolean
        default: false
    steps:
        - checkout
        - setup_env
        - create_conda:
            python_version: << parameters.python >>
        - install:
            target: << parameters.pip_target >>
        - when:
            condition: <<parameters.devmode>>
            steps:
                - pytest_cov
        - unless:
            condition: <<parameters.devmode>>
            steps:
                - pytest
        - pylint
        - when:
            condition: <<parameters.devmode>>
            steps:
              - build_docs
              - coverage

  # Clone and test examples
  integration_tests:
    docker:
      - image: *ubuntu-image
    working_directory: ~/repo
    parameters:
      python:
        type: string
        default: "3.7"
    steps:
        - checkout
        - setup_env
        - create_conda:
            python_version: << parameters.python >>
        - install:
            target: "."
        - integration

  # After integration tests
  integration_tests_postprocess:
    docker:
      - image: *ubuntu-image
    working_directory: ~/repo
    steps:
        - clear_approved_tag

  # pip install-based
  idaes_pse:
    docker:
      - image: *ubuntu-image
    working_directory: ~
    parameters:
      python:
        type: string
        default: "3.7"
    steps:
      - setup_env
      - create_conda:
          python_version: << parameters.python >>
      - idaes_pse

## Workflows

workflows:
  version: 2.1
  pull_request:
    jobs:
        - idaes_dev:
            context: IDAES
            name: "python3.6"
            python: "3.6"
        - idaes_dev:
            context: IDAES
            name: "python3.7"
            python: "3.7"
        - idaes_dev:
            context: IDAES
            name: "python3.8"
            python: "3.8"
        - idaes_dev:
            context: IDAES
            name: "python3.7 dev"
            python: "3.7"
            pip_target: ".[dev]"
            devmode: true
        - integration_tests:
            context: IDAES
            name: "integration3.6"
            python: "3.6"
        - integration_tests:
            context: IDAES
            name: "integration3.7"
            python: "3.7"
        - integration_tests:
            context: IDAES
            name: "integration3.8"
            python: "3.8"
        - integration_tests_postprocess:
            context: IDAES
            name: "after_integration"
            requires:
              - integration3.6
              - integration3.7
              - integration3.8

 # Nightly tests
  nightly:
    triggers:
      - schedule:
          cron: "0 0,6,12,18 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - idaes_dev:
          context: IDAES
          python: "3.6"
      - idaes_dev:
          context: IDAES
          python: "3.7"

name: IDAES v2 compat
on:
  pull_request:
    branches:
      - 2.0_rel

defaults:
  run:
    # -l: login shell, needed when using Conda
    shell: bash -l {0}

env:
  PYTEST_ADDOPTS: "--color=yes"
  PIP_PROGRESS_BAR: "off"

jobs:

  depr-triggers:
    name: Check depr triggers within IDAES
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.10'
      CONDA_ENV: idaes-pse-dev
    steps:

      - uses: actions/checkout@v3

      - name: Set up Conda environment
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: ${{ env.CONDA_ENV }}
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up idaes
        uses: ./.github/actions/setup-idaes
        with:
          install-target: -r requirements-dev.txt

      - name: Set up deprector
        run: |
          pip install "idaes-devtools @ git+https://github.com/IDAES/devtools"

      - name: Collect deprecations
        run: |
          deprector collect idaes -- -m unit

      - name: Save deprector output
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: deprector-idaes-${{ github.sha }}
          path: deprector.json

      - name: Analyze deprecations
        run: |
          deprector analyze idaes --callsite-registry idaes

  legacy-code:
    name: Run legacy codebase (${{ matrix.project }})
    runs-on: ubuntu-latest
    env:
      idaes_pip_target: idaes-pse @ https://github.com/IDAES/idaes-pse/archive/${{ github.ref }}.zip
    strategy:
      fail-fast: false
      matrix:
        project:
          - watertap-0.6.0rc0
        include:
          - project: watertap-0.6.0rc0
            pip-target: watertap[testing]==0.6.0rc0
            test-command: |
              pytest --pyargs watertap -m "not integration"

    steps:

      - name: Install external codebase (${{ matrix.pip-target }})
        run:
          pip install "${{ matrix.pip-target }}"
          pip uninstall --yes idaes-pse
          pip install "$idaes_pip_target"

      - name: Run test command
        run: ${{ matrix.test-command }}

  
# -*- coding: utf-8 -*-
#
# IDAES documentation build configuration file
#
# This file is execfile()d with the current directory set to its
# containing dir.

import os
import sys
import sphinx_book_theme as theme

# For importing from idaes.<modules..>
sys.path.insert(0, os.path.abspath(".."))
import idaes.ver

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.intersphinx",
    "sphinx.ext.coverage",
    "sphinx.ext.mathjax",
    "sphinx.ext.ifconfig",
    "sphinx.ext.viewcode",
    "sphinx.ext.githubpages",
    "sphinx.ext.napoleon",
    "sphinx.ext.autosectionlabel",
    "sphinxarg.ext",
    "sphinx.ext.doctest",
    "sphinx_copybutton",
]

# Put type hints in the description, not signature
autodoc_typehints = "description"

# Avoid duplicating heading labels across parallelly constructed documentation
autosectionlabel_prefix_document = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ".rst"

# The encoding of source files.
#
# source_encoding = 'utf-8-sig'

# The main toctree document.
main_doc = "index"

# General information about the project.
project = "IDAES"
copyright = "2016-2024, David Miller et al."
author = "The IDAES project"


# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = idaes.ver.__version__
# The full version, including alpha/beta/rc tags.
release = idaes.ver.__version__

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ["apidoc/*tests*"]

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

# Global constants for supported Python versions
IDAES_PV_MIN, IDAES_PV_MAX, IDAES_PV_DEFAULT = "3.8", "3.12", "3.10"

# This block of text will be virtually present at the end of every file.
# Used here to define substitutions for re-used URLs, e.g. just add "|examples-site|" to
# any page and it will be replaced with the hyperlink and text shown below.

rst_epilog = f"""
.. |python-min| replace:: {IDAES_PV_MIN}
.. |python-max| replace:: {IDAES_PV_MAX}
.. |examples-site| replace:: `examples website`_
.. _examples website: https://idaes-examples.readthedocs.io/en/latest/
.. |github-issues| replace:: `Github issues page`_
.. _Github issues page: https://github.com/IDAES/idaes-pse/issues
"""


class RobustReplacements(dict):
    """These replacements are needed because the Sphinx replacements are
    not expanded within code blocks.
    """

    def __call__(self, app, docname, source):
        text = source[0]
        for to_replace, replace_with in self.items():
            text = text.replace(to_replace, replace_with)
        source[0] = text


_python_versions_replacements = RobustReplacements(
    {
        "|python-min|": IDAES_PV_MIN,
        "|python-max|": IDAES_PV_MAX,
        "|python-default|": IDAES_PV_DEFAULT,
    }
)

# Intersphinx configuration (added 02/22/2024 -Dan G.)
# - To use in doc files, prefix cross-references with ':external:'
# - To explicitly choose an external project prefix with ':external+NAME:',
#   where NAME matches one of the dictionary keys below.
intersphinx_mapping = {
    # Python standard library.
    "python": ("https://docs.python.org/3", None),
    # add links to idaes-ui
    "ui": ("https://idaes-ui.readthedocs.io/en/latest/", None),
    # add links to Pyomo
    "pyomo": ("https://pyomo.readthedocs.io/en/stable/", None),
}

# -- Options for HTML output ----------------------------------------------

html_theme = "sphinx_book_theme"
html_theme_options = {
    "logo": {
        "image_light": "images/idaes-logo-text.png",
        "image_dark": "images/idaes-logo-text.png",
    },
    "repository_provider": "github",
    "repository_url": "https://github.com/idaes/idaes-pse",
    "use_repository_button": True,
    "path_to_docs": "docs",
    "extra_footer": """<p>This work was sponsored by the Department of Energy,
    Fossil Energy and Carbon Management</p>""",
}
html_theme_path = [theme.get_html_theme_path()]
html_title = "IDAES v{}".format(release)
html_logo = "images/idaes-logo-100x100.png"
html_favicon = "images/idaes-logo.ico"
html_static_path = ["static", "images"]
html_css_files = ["css/custom.css", "css/badge_only.css"]
html_extra_path = ["static/extra/"]
htmlhelp_basename = "IDAESdoc"

# Sphinx-copybutton options
# XXX: This does not add the button to blockquotes, for some reason
# copybutton_selector = "div.highlight pre,blockquote"

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    "preamble": r"\usepackage{enumitem}\setlistdepth{99}",
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (main_doc, "IDAES.tex", "IDAES Documentation", "IDAES team", "manual")
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [("dmf/cli", "dmf", "Data Management Framework", [author], 1)]

# If true, show URL addresses after external links.
#
# man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        main_doc,
        "IDAES",
        "IDAES Documentation",
        author,
        "IDAES",
        "One line description of project.",
        "Miscellaneous",
    )
]


def setup(app):
    app.connect("source-read", _python_versions_replacements)
